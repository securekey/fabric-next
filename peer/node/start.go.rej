diff a/peer/node/start.go b/peer/node/start.go	(rejected hunks)
@@ -23,6 +25,7 @@ import (
 	"github.com/hyperledger/fabric/common/deliver"
 	"github.com/hyperledger/fabric/common/flogging"
 	"github.com/hyperledger/fabric/common/localmsp"
+	"github.com/hyperledger/fabric/common/metrics"
 	"github.com/hyperledger/fabric/common/policies"
 	"github.com/hyperledger/fabric/common/viperutil"
 	"github.com/hyperledger/fabric/core/aclmgmt"
@@ -126,7 +132,7 @@ func serve(args []string) error {
 
 	// set the logging level for specific modules defined via environment
 	// variables or core.yaml
-	overrideLogModules := []string{"msp", "gossip", "ledger", "cauthdsl", "policies", "grpc", "peer.gossip"}
+	overrideLogModules := []string{"msp", "gossip", "ledger", "cauthdsl", "policies", "grpc", "peer.gossip", "transientstore.couchdb"}
 	for _, module := range overrideLogModules {
 		err := common.SetLogLevelFromViper(module)
 		if err != nil {
@@ -327,6 +333,13 @@ func serve(args []string) error {
 		certs.TLSClientCert.Store(&clientCert)
 	}
 
+	if ledgerconfig.HasRole(ledgerconfig.EndorserRole) {
+		logger.Infof("This peer is an endorser")
+	}
+	if ledgerconfig.HasRole(ledgerconfig.CommitterRole) {
+		logger.Infof("This peer is a committer")
+	}
+
 	err = service.InitGossipService(serializedIdentity, peerEndpoint.Address, peerServer.Server(), certs,
 		messageCryptoService, secAdv, secureDialOpts, bootstrap...)
 	if err != nil {
