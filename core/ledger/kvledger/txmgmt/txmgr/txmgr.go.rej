diff a/core/ledger/kvledger/txmgmt/txmgr/txmgr.go b/core/ledger/kvledger/txmgmt/txmgr/txmgr.go	(rejected hunks)
@@ -19,12 +19,16 @@ package txmgr
 import (
 	"github.com/hyperledger/fabric/core/ledger"
 	"github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/version"
+	"github.com/hyperledger/fabric/core/ledger/util"
+	"github.com/hyperledger/fabric/protos/common"
+	"golang.org/x/net/context"
 )
 
 // TxMgr - an interface that a transaction manager should implement
 type TxMgr interface {
 	NewQueryExecutor(txid string) (ledger.QueryExecutor, error)
 	NewTxSimulator(txid string) (ledger.TxSimulator, error)
+	ValidateMVCC(ctx context.Context, block *common.Block, txFlags util.TxValidationFlags, filter util.TxFilter) error
 	ValidateAndPrepare(blockAndPvtdata *ledger.BlockAndPvtData, doMVCCValidation bool) error
 	GetLastSavepoint() (*version.Height, error)
 	ShouldRecover(lastAvailableBlock uint64) (bool, uint64, error)
@@ -34,6 +38,15 @@ type TxMgr interface {
 	Shutdown()
 }
 
+//LockBasedTxMgr - an extension of TxMgr interface which allows to lock/unlock txmgr rwlock
+type LockBasedTxMgr interface {
+	TxMgr
+	RLock()
+	RUnlock()
+	Lock()
+	Unlock()
+}
+
 // ErrUnsupportedTransaction is expected to be thrown if a unsupported query is performed in an update transaction
 type ErrUnsupportedTransaction struct {
 	Msg string
