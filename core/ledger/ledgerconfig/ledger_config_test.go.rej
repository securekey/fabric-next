diff a/core/ledger/ledgerconfig/ledger_config_test.go b/core/ledger/ledgerconfig/ledger_config_test.go	(rejected hunks)
@@ -241,6 +241,48 @@ func TestGetMaxBlockfileSize(t *testing.T) {
 	testutil.AssertEquals(t, GetMaxBlockfileSize(), 67108864)
 }
 
+func TestGetBlockStoreProviderDefault(t *testing.T) {
+	provider := GetBlockStoreProvider()
+	testutil.AssertEquals(t, provider, FilesystemLedgerStorage)
+}
+
+func TestGetBlockStoreProviderFilesystem(t *testing.T) {
+	setUpCoreYAMLConfig()
+	defer ledgertestutil.ResetConfigToDefaultValues()
+	viper.Set("ledger.blockchain.blockStorage", "filesystem")
+	provider := GetBlockStoreProvider()
+	testutil.AssertEquals(t, provider, FilesystemLedgerStorage)
+}
+
+func TestGetBlockStoreProviderCouchDB(t *testing.T) {
+	setUpCoreYAMLConfig()
+	defer ledgertestutil.ResetConfigToDefaultValues()
+	viper.Set("ledger.blockchain.blockStorage", "CouchDB")
+	provider := GetBlockStoreProvider()
+	testutil.AssertEquals(t, provider, CouchDBLedgerStorage)
+}
+
+func TestGetHistoryStoreProviderDefault(t *testing.T) {
+	provider := GetHistoryStoreProvider()
+	testutil.AssertEquals(t, provider, LevelDBHistoryStorage)
+}
+
+func TestGetHistoryStoreProviderLevelDB(t *testing.T) {
+	setUpCoreYAMLConfig()
+	defer ledgertestutil.ResetConfigToDefaultValues()
+	viper.Set("ledger.state.historyStorage", "goleveldb")
+	provider := GetHistoryStoreProvider()
+	testutil.AssertEquals(t, provider, LevelDBHistoryStorage)
+}
+
+func TestGetHistoryStoreProviderCouchDB(t *testing.T) {
+	setUpCoreYAMLConfig()
+	defer ledgertestutil.ResetConfigToDefaultValues()
+	viper.Set("ledger.state.historyStorage", "CouchDB")
+	provider := GetHistoryStoreProvider()
+	testutil.AssertEquals(t, provider, CouchDBHistoryStorage)
+}
+
 func setUpCoreYAMLConfig() {
 	//call a helper method to load the core.yaml
 	ledgertestutil.SetupCoreYAMLConfig()
