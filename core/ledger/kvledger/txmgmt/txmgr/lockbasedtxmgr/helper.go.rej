--- core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go
+++ core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/helper.go
@@ -109,20 +109,26 @@ func (h *queryHelper) getPrivateData(ns, coll, key string) ([]byte, error) {
 	var hashVersion *version.Height
 	var versionedValue *statedb.VersionedValue
 
-	if versionedValue, err = h.txmgr.db.GetPrivateData(ns, coll, key); err != nil {
+	keyHash := util.ComputeStringHash(key)
+	if hashVersion, err = h.txmgr.db.GetKeyHashVersion(ns, coll, keyHash); err != nil {
 		return nil, err
 	}
 
-	val, ver := decomposeVersionedValue(versionedValue)
+	if hashVersion == nil {
+		// If the hash isn't found then the private data does not exist. No need to check the private store.
+		return nil, nil
+	}
 
-	keyHash := util.ComputeStringHash(key)
-	if hashVersion, err = h.txmgr.db.GetKeyHashVersion(ns, coll, keyHash); err != nil {
+	if versionedValue, err = h.txmgr.db.GetPrivateData(ns, coll, key); err != nil {
 		return nil, err
 	}
+
+	val, ver := decomposeVersionedValue(versionedValue)
+
 	if !version.AreSame(hashVersion, ver) {
 		return nil, &txmgr.ErrPvtdataNotAvailable{Msg: fmt.Sprintf(
-			"Private data matching public hash version is not available. Public hash version = %#v, Private data version = %#v",
-			hashVersion, ver)}
+			"Private data matching public hash version is not available. Public hash version = %#v, Private data version = %#v key=%s namespace=%s coll=%s",
+			hashVersion, ver, key, ns, coll)}
 	}
 	if h.rwsetBuilder != nil {
 		h.rwsetBuilder.AddToHashedReadSet(ns, coll, key, ver)
