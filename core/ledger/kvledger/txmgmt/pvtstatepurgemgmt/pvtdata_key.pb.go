// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pvtdata_key.proto

/*
Package pvtstatepurgemgmt is a generated protocol buffer package.

It is generated from these files:
	pvtdata_key.proto

It has these top-level messages:
	PvtdataKeys
	Collections
	KeysAndHashes
	KeyAndHash
*/
package pvtstatepurgemgmt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PvtdataKeys struct {
	Map map[string]*Collections `protobuf:"bytes,1,rep,name=map" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PvtdataKeys) Reset()                    { *m = PvtdataKeys{} }
func (m *PvtdataKeys) String() string            { return proto.CompactTextString(m) }
func (*PvtdataKeys) ProtoMessage()               {}
func (*PvtdataKeys) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PvtdataKeys) GetMap() map[string]*Collections {
	if m != nil {
		return m.Map
	}
	return nil
}

type Collections struct {
	Map map[string]*KeysAndHashes `protobuf:"bytes,1,rep,name=map" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Collections) Reset()                    { *m = Collections{} }
func (m *Collections) String() string            { return proto.CompactTextString(m) }
func (*Collections) ProtoMessage()               {}
func (*Collections) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Collections) GetMap() map[string]*KeysAndHashes {
	if m != nil {
		return m.Map
	}
	return nil
}

type KeysAndHashes struct {
	List []*KeyAndHash `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *KeysAndHashes) Reset()                    { *m = KeysAndHashes{} }
func (m *KeysAndHashes) String() string            { return proto.CompactTextString(m) }
func (*KeysAndHashes) ProtoMessage()               {}
func (*KeysAndHashes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KeysAndHashes) GetList() []*KeyAndHash {
	if m != nil {
		return m.List
	}
	return nil
}

type KeyAndHash struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *KeyAndHash) Reset()                    { *m = KeyAndHash{} }
func (m *KeyAndHash) String() string            { return proto.CompactTextString(m) }
func (*KeyAndHash) ProtoMessage()               {}
func (*KeyAndHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *KeyAndHash) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyAndHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*PvtdataKeys)(nil), "pvtstatepurgemgmt.PvtdataKeys")
	proto.RegisterType((*Collections)(nil), "pvtstatepurgemgmt.Collections")
	proto.RegisterType((*KeysAndHashes)(nil), "pvtstatepurgemgmt.KeysAndHashes")
	proto.RegisterType((*KeyAndHash)(nil), "pvtstatepurgemgmt.KeyAndHash")
}

func init() { proto.RegisterFile("pvtdata_key.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0xd9, 0xb6, 0x8a, 0x4e, 0x14, 0x74, 0x4f, 0x45, 0x50, 0x42, 0x2f, 0xf6, 0x94, 0x60,
	0x14, 0x51, 0x6f, 0x56, 0x04, 0xa1, 0x14, 0x24, 0x07, 0x11, 0x2f, 0xb2, 0x49, 0xc6, 0x24, 0xe4,
	0x63, 0x97, 0xdd, 0x4d, 0x30, 0xff, 0x46, 0xfc, 0xa5, 0x92, 0x34, 0x62, 0x62, 0x83, 0xde, 0x86,
	0x77, 0x9e, 0x79, 0x79, 0x16, 0x16, 0x0e, 0x45, 0xa9, 0x03, 0xa6, 0xd9, 0x6b, 0x82, 0x95, 0x25,
	0x24, 0xd7, 0x9c, 0xd6, 0x91, 0xd2, 0x4c, 0xa3, 0x28, 0x64, 0x88, 0x59, 0x98, 0xe9, 0xd9, 0x07,
	0x01, 0xe3, 0x71, 0x0d, 0x2e, 0xb1, 0x52, 0xf4, 0x1a, 0xc6, 0x19, 0x13, 0x53, 0x62, 0x8e, 0xe7,
	0x86, 0x73, 0x6a, 0x6d, 0x1c, 0x58, 0x1d, 0xd8, 0x5a, 0x31, 0x71, 0x9f, 0x6b, 0x59, 0xb9, 0xf5,
	0xcd, 0xd1, 0x13, 0xec, 0x7c, 0x07, 0xf4, 0x00, 0xc6, 0x09, 0x56, 0x53, 0x62, 0x92, 0xf9, 0xae,
	0x5b, 0x8f, 0xf4, 0x02, 0xb6, 0x4a, 0x96, 0x16, 0x38, 0x1d, 0x99, 0x64, 0x6e, 0x38, 0x27, 0x03,
	0xd5, 0x77, 0x3c, 0x4d, 0xd1, 0xd7, 0x31, 0xcf, 0x95, 0xbb, 0x86, 0x6f, 0x46, 0x57, 0x64, 0xf6,
	0x49, 0xc0, 0xe8, 0xac, 0xfe, 0x57, 0xec, 0xc0, 0xbf, 0x14, 0x9f, 0xff, 0x54, 0xbc, 0xec, 0x2b,
	0x9a, 0x03, 0xd5, 0xf5, 0xb3, 0x6f, 0xf3, 0xe0, 0x81, 0xa9, 0x08, 0x7b, 0x92, 0x0b, 0xd8, 0xef,
	0xed, 0xe8, 0x19, 0x4c, 0xd2, 0x58, 0xe9, 0x56, 0xf3, 0x78, 0xb8, 0xab, 0xc5, 0xdd, 0x06, 0x9d,
	0x39, 0x00, 0x3f, 0xd9, 0x80, 0x1f, 0x85, 0x49, 0xc4, 0x54, 0xd4, 0xe8, 0xed, 0xb9, 0xcd, 0xbc,
	0x58, 0xbd, 0x2c, 0xc3, 0x58, 0x47, 0x85, 0x67, 0xf9, 0x3c, 0xb3, 0xa3, 0x4a, 0xa0, 0x4c, 0x31,
	0x08, 0x51, 0xda, 0x6f, 0xcc, 0x93, 0xb1, 0x6f, 0xfb, 0x5c, 0xa2, 0xdd, 0x46, 0x49, 0xd9, 0x0e,
	0xfa, 0xbd, 0x36, 0xb0, 0x37, 0x9c, 0xbc, 0xed, 0xe6, 0xa3, 0x9c, 0x7f, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xdf, 0x2c, 0x02, 0xd0, 0x3d, 0x02, 0x00, 0x00,
}
